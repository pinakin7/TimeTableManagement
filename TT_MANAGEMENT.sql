CREATE DATABASE tt_management_db;

USE tt_management_db;

CREATE TABLE auth_user (
  USERNAME varchar(100) NOT NULL,
  PASSWORD varchar(100) NOT NULL,
  USER_CODE varchar(1) NOT NULL,
  PRIMARY KEY (USERNAME),
  UNIQUE KEY USERNAME_UNIQUE (USERNAME)
);

CREATE TABLE faculties (
  FACULTY_ID varchar(45) NOT NULL,
  USERNAME varchar(100) NOT NULL,
  NAME varchar(100) NOT NULL,
  PRIMARY KEY (FACULTY_ID),
  KEY AUTH_FAC_idx (USERNAME),
  CONSTRAINT AUTH_FAC FOREIGN KEY (USERNAME) REFERENCES auth_user (USERNAME) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE subject (
  SUBJECT_CODE varchar(45) NOT NULL,
  NAME varchar(100) NOT NULL,
  FACULTY_CODE varchar(45) DEFAULT NULL,
  PRIMARY KEY (SUBJECT_CODE),
  UNIQUE KEY BLOCK_UNIQUE (SUBJECT_CODE),
  KEY FAC_FACCODE_idx (FACULTY_CODE),
  CONSTRAINT FAC_FACCODE FOREIGN KEY (FACULTY_CODE) REFERENCES faculties (FACULTY_ID) ON DELETE SET NULL ON UPDATE SET NULL
);

CREATE TABLE time_table (
  COURSE_CODE varchar(45) NOT NULL,
  FACULTY_CODE varchar(45) DEFAULT NULL,
  BLOCK varchar(1) DEFAULT NULL,
  ROOM_NUMBER int DEFAULT NULL,
  START_TIME TIME NOT NULL,
  END_TIME TIME NOT NULL,
  DAY varchar(45) NOT NULL,
  CONSTRAINT COURSE_FACCODE FOREIGN KEY (FACULTY_CODE) REFERENCES faculties (FACULTY_ID) ON DELETE SET NULL ON UPDATE SET NULL,
  CONSTRAINT COURSE_SUBJECT FOREIGN KEY (COURSE_CODE) REFERENCES subject (SUBJECT_CODE) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE students (
  STUDENT_ID VARCHAR(45) NOT NULL,
  USERNAME VARCHAR(45) NOT NULL,
  NAME VARCHAR(45) NOT NULL,
  PRIMARY KEY (STUDENT_ID),
  INDEX STU_AUTH_idx (USERNAME ASC) VISIBLE,
  CONSTRAINT STU_AUTH
    FOREIGN KEY (USERNAME)
    REFERENCES tt_management_db.auth_user (USERNAME)
    ON DELETE CASCADE
    ON UPDATE CASCADE);

    CREATE TABLE enrollments (
  COURSE_ID VARCHAR(45) NOT NULL,
  STUDENT_ID VARCHAR(45) NOT NULL,
  INDEX ENROLL_COURSE_idx (COURSE_ID ASC) VISIBLE,
  INDEX ENROLL_STU_idx (STUDENT_ID ASC) VISIBLE,
  CONSTRAINT ENROLL_COURSE
    FOREIGN KEY (COURSE_ID)
    REFERENCES tt_management_db.subject (SUBJECT_CODE)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT ENROLL_STU
    FOREIGN KEY (STUDENT_ID)
    REFERENCES tt_management_db.students (STUDENT_ID)
    ON DELETE CASCADE
    ON UPDATE CASCADE);